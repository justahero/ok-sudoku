use std::{convert::TryFrom, time::Duration};

use criterion::{Criterion, criterion_group, criterion_main};
use sudoku::{Solver, Sudoku};

criterion_group!(
    benches,
    solve_sudokus,
);
criterion_main!(benches);

/// This benchmark solves a fixed list of sudokus
fn solve_sudokus(criterion: &mut Criterion) {
    let mut group = criterion.benchmark_group("solve_sudokus");
    group.warm_up_time(Duration::from_millis(100));
    group.measurement_time(Duration::from_secs(10));
    group.sample_size(10);
    group.bench_function("solve", |bencher| {
        let sudokus = [
            // r"4.....8.5.3..........7......2.....6.....8.4......1.......6.3.7.5..2.....1.4......",
            r"52...6.........7.13...........4..8..6......5...........418.........3..2...87.....",
            r"6.....8.3.4.7.................5.4.7.3..2.....1.6.......2.....5.....8.6......1....",
            // r"48.3............71.2.......7.5....6....2..8.............1.76...3.....4......5....",
            // r"....14....3....2...7..........9...3.6.1.............8.2.....1.4....5.6.....7.8...",
            // r"......52..8.4......3...9...5.1...6..2..7........3.....6...1..........7.4.......3.",
            // r"6.2.5.........3.4..........43...8....1....2........7..5..27...........81...6.....",
            // r".524.........7.1..............8.2...3.....6...9.5.....1.6.3...........897........",
            // r"6.2.5.........4.3..........43...8....1....2........7..5..27...........81...6.....",
            // r".923.........8.1...........1.7.4...........658.........6.5.2...4.....7.....9.....",
            // r"6..3.2....5.....1..........7.26............543.........8.15........4.2........7..",
            // r".6.5.1.9.1...9..539....7....4.8...7.......5.8.817.5.3.....5.2............76..8...",
            // r"..5...987.4..5...1..7......2...48....9.1.....6..2.....3..6..2.......9.7.......5..",
            // r"3.6.7...........518.........1.4.5...7.....6.....2......2.....4.....8.3.....5.....",
            // r"1.....3.8.7.4..............2.3.1...........958.........5.6...7.....8.2...4.......",
            // r"6..3.2....4.....1..........7.26............543.........8.15........4.2........7..",
            // r"....3..9....2....1.5.9..............1.2.8.4.6.8.5...2..75......4.1..6..3.....4.6.",
            // r"45.....3....8.1....9...........5..9.2..7.....8.........1..4..........7.2...6..8..",
            // r".237....68...6.59.9.....7......4.97.3.7.96..2.........5..47.........2....8.......",
            // r"..84...3....3.....9....157479...8........7..514.....2...9.6...2.5....4......9..56",
        ];

        bencher.iter(|| {
            for sudoku in sudokus.iter() {
                let sudoku = Sudoku::try_from(*sudoku).unwrap();
                Solver::find_unique(&sudoku).ok();
            }
        });
    });
}
